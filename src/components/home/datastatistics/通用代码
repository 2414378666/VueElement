<template>
  <div id="trendPage">
    <div style="width: 100%; height: 600px;" class="trend" ref="trendChart"></div>
  </div>
</template>

<script>
export default	{
  name:	'trendPage',
  data() {
    return {
      chartInstance: null, //初始化echarts
      datas: {}, //服务器返回数据
      titleFontSize: 0 //计算后的页面尺寸值
    }
  },
  mounted() {
     //调用初始化
    this.initCharts()
    //调用获取数据
    this.getData()
    //调用窗口监听函数
    window.addEventListener('resize', this.screenAdapter)
    //打开窗口之后就调用方法测算窗口大小来改变样式
    this.screenAdapter()
  },
  destroyed () {
    //销毁容器大小监听器监听器
    window.removeEventListener('resize', this.screenAdapter)
  },
  methods: {
    initCharts () {
      this.chartInstance = this.$echarts.init(this.$refs.trendChart, 'chalk')
      //初始化图表把除数据的所有设置初始化好 方便维护
      const option = {

      }
      this.chartInstance.setOption(option)
    },
    // 获取页面展示所需数据
    async getData () {
      const data = await this.$http2({
        method: 'get',
        url: 'trend'
      })
      if(data.status != 200) return this.message.error('获取横状柱形图数据失败')
      this.datas = data.data
      this.upDateCharts()
    },
    // 对页面数据进行处理
    upDateCharts () {
      const dataOption = {}
      this.chartInstance.setOption(dataOption)
    },
    // 改变刷新页面尺寸大小
    screenAdapter () {
      this.titleFontSize = this.$refs.trendChart.offsetWidth / 100 * 2.6
      const adapteroption = {}
      this.chartInstance.setOption(adapteroption)
      // 当容器大小发送改变时手动刷新
      this.chartInstance.resize()
    }
    
  }
}
</script>

<style scoped>

</style>